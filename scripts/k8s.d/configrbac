#!/bin/bash

#
# Config RBAC for Kublem Authorization
#

sourceconf "$PLATFORM_CONF"
sourceconf "$CA_CONF"
sourceconf "$K8S_CONF"
sourceconf "$PREP_CONF"
function _configrbac(){

    RBAC_CREATE="./conf/k8s/admin/rbac_create.yaml"
    RBAC_BIND="./conf/k8s/admin/rbac_bind.yaml"

    if [ -f "$RBAC_CREATE" ] || [ -f "$RBAC_BIND" ]; then
        @go.log FATAL "RBAC Files of $RBAC_CREATE or $RBAC_BIND already exist, exiting"
    fi


cat > $RBAC_CREATE << EOF
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-apiserver-to-kubelet
rules:
  - apiGroups:
      - ""
    resources:
      - nodes/proxy
      - nodes/stats
      - nodes/log
      - nodes/spec
      - nodes/metrics
    verbs:
      - "*"
EOF

cat > $RBAC_BIND << EOL
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: system:kube-apiserver
  namespace: ""
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-apiserver-to-kubelet
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: kubernetes
EOL

    @go.log INFO "Applying $RBAC_CREATE"
    ./bin/kubectl apply --kubeconfig ./conf/k8s/admin/admin_ext.kubeconfig -f $RBAC_CREATE
    echo ""

    @go.log INFO "Applying $RBAC_BIND"
    ./bin/kubectl apply --kubeconfig ./conf/k8s/admin/admin_ext.kubeconfig -f $RBAC_BIND
    echo ""
}




_configrbac "$@"

