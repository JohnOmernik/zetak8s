#!/bin/bash

REPO_TOOLS="ipset unzip bc nfs-common syslinux nano git jq apt-transport-https socat ca-certificates curl software-properties-common"


if [ ! -d "./bin" ]; then
    mkdir -p ./bin
fi
cat > ./bin/ubuntu_prep.sh << EOF
#!/bin/bash


# Install some common tools
export DEBIAN_FRONTEND=noninteractive
sudo apt-get update && sudo apt-get install -y $REPO_TOOLS

# Now we will install our certificates so things are trusted
sudo cp /root/scripts/zetaca.crt /usr/local/share/ca-certificates/
sudo update-ca-certificates

# Create install locations
echo "Making Kubernetes Directory at /opt/k8s"
sudo  mkdir -p /opt/k8s && sudo mkdir -p /opt/k8s/certs && sudo mkdir -p /opt/k8s/bin && sudo mkdir -p /opt/k8s/conf && sudo chown -R $IUSER:root /opt/k8s && sudo chmod -R 770 /opt/k8s


echo "Cleaning rc.local"
sudo sed -i "s/exit 0//g" /etc/rc.local

echo "Disabling Plymouth"
echo "/bin/rm -f /etc/init.d/plymouth* > /dev/null 2>&1"  | sudo tee -a /etc/rc.local

echo "Setting IP Forwarding to enabled"
sudo sysctl -w net.ipv4.ip_forward=1

echo "Updating System"
sudo DEBIAN_FRONTEND=noninteractive UCF_FORCE_CONFFNEW=YES apt-get upgrade -yq -o Dpkg::Options::="--force-confyes"
sudo DEBIAN_FRONTEND=noninteractive UCF_FORCE_CONFFNEW=YES apt-get dist-upgrade -qq --force-yes
# Remove some defaults
sudo apt-get purge lxc-docker
sudo apt-get remove -y command-not-found


# 2018-06-07 Removing Docker to try a pure conatinerd approach
#Create Docker conf file to use overlay network
#sudo mkdir -p /etc/systemd/system/docker.service.d && sudo tee /etc/systemd/system/docker.service.d/override.conf <<- EOS
#[Service]
#ExecStart=
#ExecStart=/usr/bin/docker daemon --storage-driver=overlay -H fd://
#EOS

#Install Docker
#sudo apt-get install -y -q docker.io
#sudo systemctl enable docker

# Update DHCP Resolver to prepend our kube-dns stuff
echo "prepend domain-name-servers 10.32.0.10;"|sudo tee -a /etc/dhcp/dhclient.conf

# Update DefaultTasksMax to infinifty
echo "DefaultTasksMax=infinity"|sudo tee -a /etc/systemd/system.conf

# Check for /mnt in fstab - This is because sometime Amazon will mount a volumt to /mnt when we don't want it mounted there. 
CHK=\$(sudo grep "\/mnt" /etc/fstab|cut -f1)
if [ "\$CHK" != "" ]; then
    echo "Updating weird mount of /mnt"
    sudo sed -i "s@\$CHK@#\$CHK@" /etc/fstab
fi

# Now that we have Docker, we are patched, etc, reboot"
sudo shutdown -r now

EOF

